(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-8b5855ec"],{5176:function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"container"},[n("div",{staticStyle:{width:"700px"}},[n("el-form",{attrs:{"label-width":"120px"}},[n("el-form-item",{attrs:{label:"数据库表名:"}},[n("el-button",{attrs:{type:"primary"},on:{click:t.copy_db_table}},[t._v("生成")])],1),n("el-form-item",{attrs:{label:"数据库字段名:"}},[n("el-button",{attrs:{type:"primary"},on:{click:t.copy_db_field}},[t._v("生成")])],1),n("el-form-item",{attrs:{label:"响应函数:"}},[n("el-input",{staticStyle:{width:"200px","padding-right":"10px"},model:{value:t.funname,callback:function(e){t.funname=e},expression:"funname"}}),n("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.copy_method(0)}}},[t._v("原始")]),n("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.copy_method(1)}}},[t._v("获取")]),n("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.copy_method(2)}}},[t._v("创建")]),n("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.copy_method(3)}}},[t._v("更新")]),n("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.copy_method(4)}}},[t._v("删除")])],1)],1)],1)])},r=[],o=(n("99af"),n("b64b"),n("7e79"),n("a417")),i={extends:o["a"],data:function(){return{funname:""}},created:function(){var t=JSON.parse(sessionStorage.getItem("userinfo"));t.env.indexOf("prd")>=0&&this.$router.push("/404")},methods:{copy_method:function(t){if(""==this.funname)return this.$message.error({message:"请输入函数名",center:!0});1==t&&this.copy("type get_".concat(this.funname,'_req struct {\n\tPage     int `json:"page"`      // 页码\n\tPageSize int `json:"page_size"` // 每页数量\n}\n\ntype get_').concat(this.funname,'_res struct {\n\tTotal int64           `json:"total"` // 总数\n\tData  []*model. `json:"data"`  // 数据\n}\n\n// @Router /get_').concat(this.funname,' [post]\n// @Tags a\n// @Summary b\n// @Param x-token header string true "token"\n// @Param body body get_').concat(this.funname,'_req true "请求参数"\n// @Success 200  {object} get_').concat(this.funname,'_res "响应数据"\nfunc get_').concat(this.funname,"(ctx *gin.Context) {\n\tvar reqdata get_").concat(this.funname,"_req\n\tif err := ctx.ShouldBindJSON(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\tvalidator := val.New()\n\tif err := validator.Struct(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n    if reqdata.Page == 0 {\n\t\treqdata.Page = 1\n\t}\n\tif reqdata.PageSize == 0 {\n\t\treqdata.PageSize = 15\n\t}\n\tresponse := new(get_").concat(this.funname,"_res)\n\ttoken := admin.GetToken(ctx)\n\ttb := xapp.DbQuery().\n\titb := tb.WithContext(ctx).Order(tb.ID.Desc())\n\titb = itb.Where(tb.SellerID.Eq(token.SellerId))\n\t{\n    }\n\tvar err error\n\tresponse.Data, response.Total, err = itb.FindByPage((reqdata.Page-1)*reqdata.PageSize, reqdata.PageSize)\n\tif err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.InternalError, err.Error()))\n\t\treturn\n\t}\n\tctx.JSON(http.StatusOK, xenum.MakeSucess(response))\n}")),2==t&&this.copy("type create_".concat(this.funname,"_req struct {\n}\n\n// @Router /create_").concat(this.funname,' [post]\n// @Tags a\n// @Summary b\n// @Param x-token header string true "token"\n// @Param body body create_').concat(this.funname,'_req true "请求参数"\n// @Success 200 "响应数据"\nfunc create_').concat(this.funname,"(ctx *gin.Context) {\n\tvar reqdata create_").concat(this.funname,"_req\n\tif err := ctx.ShouldBindJSON(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\tvalidator := val.New()\n\tif err := validator.Struct(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\ttoken := admin.GetToken(ctx)\n\titem := new(model.)\n\titem.SellerID = token.SellerId\n\t{\n    }\n\ttb := xapp.DbQuery().\n\titb := tb.WithContext(ctx)\n\terr := itb.Omit(tb.CreateTime).Create(item)\n\tif err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.InternalError, err.Error()))\n\t\treturn\n\t}\n\tctx.JSON(http.StatusOK, xenum.Success)\n}")),3==t&&this.copy("type update_".concat(this.funname,"_req struct {\n}\n\n// @Router /update_").concat(this.funname,' [post]\n// @Tags a\n// @Summary b\n// @Param x-token header string true "token"\n// @Param body body update_').concat(this.funname,'_req true "请求参数"\n// @Success 200 "响应数据"\nfunc update_').concat(this.funname,"(ctx *gin.Context) {\n\tvar reqdata update_").concat(this.funname,"_req\n\tif err := ctx.ShouldBindJSON(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\tvalidator := val.New()\n\tif err := validator.Struct(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\ttoken := admin.GetToken(ctx)\n\ttb := xapp.DbQuery().\n\titb := tb.WithContext(ctx)\n\titb = itb.Where(tb.SellerID.Eq(token.SellerId))\n\t{\n\t}\n\titem := map[string]interface{}{}\n\t{\n\t}\n\t_, err := itb.Updates(item)\n\tif err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.InternalError, err.Error()))\n\t\treturn\n\t}\n\tctx.JSON(http.StatusOK, xenum.Success)\n}")),4==t&&this.copy("type delete_".concat(this.funname,"_req struct {\n}\n\n// @Router /delete_").concat(this.funname,' [post]\n// @Tags a\n// @Summary b\n// @Param x-token header string true "token"\n// @Param body body delete_').concat(this.funname,'_req true "请求参数"\n// @Success 200 "响应数据"\nfunc delete_').concat(this.funname,"(ctx *gin.Context) {\n\tvar reqdata delete_").concat(this.funname,"_req\n\tif err := ctx.ShouldBindJSON(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\tvalidator := val.New()\n\tif err := validator.Struct(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\ttoken := admin.GetToken(ctx)\n\ttb := xapp.DbQuery().\n\titb := tb.WithContext(ctx)\n\titb = itb.Where(tb.SellerID.Eq(token.SellerId))\n\t{\n\t}\n\t_, err := itb.Delete()\n\tif err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.InternalError, err.Error()))\n\t\treturn\n\t}\n\tctx.JSON(http.StatusOK, xenum.Success)\n}\n")),0==t&&this.copy("type ".concat(this.funname,'_req struct {\n\tPage     int `json:"page"`      // 页码\n\tPageSize int `json:"page_size"` // 每页数量\n}\n\ntype ').concat(this.funname,'_res struct {\n\tTotal int64           `json:"total"` // 总数\n\tData  []*model. `json:"data"`  // 数据\n}\n\n// @Router /').concat(this.funname,' [post]\n// @Tags a\n// @Summary b\n// @Param x-token header string true "token"\n// @Param body body ').concat(this.funname,'_req true "请求参数"\n// @Success 200  {object} ').concat(this.funname,'_res "响应数据"\nfunc ').concat(this.funname,"(ctx *gin.Context) {\n\tvar reqdata ").concat(this.funname,"_req\n\tif err := ctx.ShouldBindJSON(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n\tvalidator := val.New()\n\tif err := validator.Struct(&reqdata); err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.BadParams, err.Error()))\n\t\treturn\n\t}\n    if reqdata.Page == 0 {\n\t\treqdata.Page = 1\n\t}\n\tif reqdata.PageSize == 0 {\n\t\treqdata.PageSize = 15\n\t}\n\tresponse := new(").concat(this.funname,"_res)\n\ttoken := admin.GetToken(ctx)\n\ttb := xapp.DbQuery().\n\titb := tb.WithContext(ctx).Order(tb.ID.Desc())\n\titb = itb.Where(tb.SellerID.Eq(token.SellerId))\n\t{\n    }\n\tvar err error\n\tresponse.Data, response.Total, err = itb.FindByPage((reqdata.Page-1)*reqdata.PageSize, reqdata.PageSize)\n\tif err != nil {\n\t\tctx.JSON(http.StatusBadRequest, xenum.MakeError(xenum.InternalError, err.Error()))\n\t\treturn\n\t}\n\tctx.JSON(http.StatusOK, xenum.Success)\n}"))},copy_db_table:function(){var t=this;this.$post("/v1/admin_tools",{query_type:"db_table"}).then((function(e){t.copy(e.data)}))},copy_db_field:function(){var t=this;this.$post("/v1/admin_tools",{query_type:"db_field"}).then((function(e){t.copy(e.data)}))}}},s=i,c=n("2877"),u=Object(c["a"])(s,a,r,!1,null,null,null);e["default"]=u.exports},"7e79":function(t,e,n){},a417:function(t,e,n){"use strict";var a=n("5530"),r=(n("e9c4"),n("b64b"),n("d3b7"),n("159b"),n("5c96")),o=(n("0c6d"),n("2f62")),i=(n("73f5"),n("c1df")),s=n.n(i),c=n("f62d"),u=n("b76c");e["a"]={extends:u["a"],data:function(){return{filters:{},page:1,page_size:15,page_sizes:[15,50,100,200,500,1e3,1500],total:0,table_data:[],itemdata:null,Export:0,columnpicker:!1,column:{},dialog0:{show:!1,title:"",itemdata:{}},dialog1:{show:!1,title:"",itemdata:{}},dialog2:{show:!1,title:"",itemdata:{}},dialog3:{show:!1,title:"",itemdata:{}},dialog4:{show:!1,title:"",itemdata:{}},dialog5:{show:!1,title:"",itemdata:{}},dialog6:{show:!1,title:"",itemdata:{}},dialog7:{show:!1,title:"",itemdata:{}},dialog8:{show:!1,title:"",itemdata:{}},dialog9:{show:!1,title:"",itemdata:{}},symbols:[{id:"trx",name:"TRX"},{id:"usdt",name:"USDT"}]}},computed:Object(a["a"])({},Object(o["b"])(["sellers","channels","games","rooms","states"])),created:function(){if(this.columns){var t="column_".concat(this.$vnode.key),e=localStorage.getItem(t);if(e)this.column=JSON.parse(e);else{for(var n=0;n<this.columns.length;n++)this.column[this.columns[n]]=!0;localStorage.setItem(t,JSON.stringify(this.column))}}},methods:{pageChange:function(t){this.page=t,this.getTableData()},page_sizeChange:function(t){this.page=1,this.page_size=t,this.getTableData()},handleQuery:function(t){var e=this;1===t?(this.Export=1,this.getTableData((function(t){e.Export=0,window.open("/sapi"+t.filename)}))):(this.Export=0,this.page=1,this.getTableData())},handleAdd:function(t){var e=this;this.AddItem(t,(function(n,a){a=a||{},e["dialog".concat(t)].itemdata=a,e["dialog".concat(t)].title=n,e["dialog".concat(t)].show=!0}))},handleEdit:function(t,e){var n=this;this["dialog".concat(e)].itemdata=JSON.parse(JSON.stringify(t)),this.ModifyItem(e,(function(t){n["dialog".concat(e)].title=t,n["dialog".concat(e)].show=!0}),this["dialog".concat(e)].itemdata)},handleDelete:function(t,e){this.DeleteItem(t,e)},getQueryData:function(){var t={};t.page=this.page,t.page_size=this.page_size;var e=JSON.parse(JSON.stringify(this.filters));for(var n in e.channel_id=e.channel_id||0,e)null!=e[n]&&("DateRange"==n&&Object(c["a"])(e[n])?(t["start_time"]=s()(e[n][0]).format("YYYY-MM-DD HH:mm:ss"),t["end_time"]=s()(s()(e[n][1]).valueOf()+864e5).format("YYYY-MM-DD HH:mm:ss")):"DateTimeRange"==n&&Object(c["a"])(e[n])?(t["start_time"]=s()(e[n][0]).format("YYYY-MM-DD HH:mm:ss"),t["end_time"]=s()(s()(e[n][1]).valueOf()+1e3).format("YYYY-MM-DD HH:mm:ss")):(t[n]=e[n],"symbol"==n.toLowerCase()&&(t[n]=e[n].toLowerCase())));return 1==this.Export&&(t.Export=this.Export),t},copy:function(t){var e=document.createElement("textarea");e.value="".concat(t),document.body.appendChild(e),e.select(),document.execCommand("copy"),e.remove(),Object(r["Message"])({type:"success",message:"复制成功",center:!0})},getSummaries:function(t){var e=this,n=t.columns,a=[];return n.forEach((function(t,n){if(0!=n)e.getTotal&&(a[n]=e.getTotal(t.property));else{if(e.getTotal){var r=e.getTotal(0);if(r)return void(a[n]=r)}a[n]="总计"}})),a},selectColumn:function(){this.columnpicker=!0},setColumn:function(t){for(var e in t)this.column[e]=t[e];var n="column_".concat(this.$vnode.key);localStorage.setItem(n,JSON.stringify(this.column))}}}},b76c:function(t,e,n){"use strict";e["a"]={data:function(){return{MapYesNo:{1:"是",2:"否"},ListYesNo:[{id:1,name:"是"},{id:2,name:"否"}]}}}}}]);