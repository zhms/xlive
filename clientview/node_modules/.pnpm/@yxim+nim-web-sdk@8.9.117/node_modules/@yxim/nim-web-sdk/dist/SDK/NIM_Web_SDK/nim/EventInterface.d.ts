import { NIMCommonError, NIMStrAnyObj } from '../types';
/**
 * 事件相关 API
 *
 * 注：appkey 级别需要开通功能才可以启用。
 */
export interface EventInterface {
    /**
     * 发布事件，事件订阅者会收到 onpushevents 回调函数
     *
     * IM订阅事件分为两类：
     * 1. 在线状态订阅, 主要用于监听好友的在线状态。初始化阶段，只有订阅监听的账户在线时，才会收到在线订阅事件
     * <ul>
     * <li>type = 1, value = 1: 用户在线</li>
     * <li>type = 1, value = 2: 用户登出</li>
     * <li>type = 1, value = 3: 用户断开连接</li>
     * </ul>
     * 2. 用户自定义事件。如果云信系统内置的在线状态事件无法满足应用需求，需要自定义事件时，可以使用该 API 来发布自定义事件。用户自定义的订阅事件必须为 type = 1, value >= 10000
     *
     * <h4>关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onpushevents}</li>
     * <li>{@link EventInterface.subscribeEvent}</li>
     * </ul>
     */
    publishEvent(options: {
        /**
         * 事件类型, 目前只有 1。
         */
        type: number;
        /**
         * 事件状态/事件内容，由开发者做自定义映射
         *
         * 注：value 须为 10000 以上 (1-9999为云信预定义值，开发者不可使用，1代表上线，2代表下线，3代表断开连接)
         */
        value: number;
        /**
         * 用户自定义事件扩展属性
         */
        custom?: string;
        /**
         * 发布事件的有效时间 单位秒 60s~7天(604800s)，默认 7 天
         */
        validTime?: number;
        /**
         * 广播类型
         *
         * 1: 仅在线
         * 2:在线和离线
         */
        broadcastType?: number;
        /**
         * 是否同步给自己
         */
        sync?: boolean;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMPublishEventResult) => void;
    }): void;
    /**
     * 订阅指定用户的事件。无论是内置的在线状态事件或是自定义的事件，都需要通过该 API 订阅后才能接收。
     *
     * <h4>注意</h4>
     * <ul>
     * <li>每个 IM 帐号最多可订阅 3000 个其他 IM 账号</li>
     * <li>同一 IM 账号在其他设备端订阅，会覆盖本端订阅有效期。因此建议各端订阅时长保持一致</li>
     * <li>在 30 秒内，对同一 IM 账号的同一事件的订阅，即使设置为立即同步服务，也不会下发目标事件</li>
     * </ul>
     *
     * <h4>关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onpushevents}</li>
     * <li>{@link EventInterface.publishEvent}</li>
     * </ul>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/event/%E7%94%A8%E6%88%B7%E4%B8%8A%E7%BA%BF%E4%B8%8B%E7%BA%BF.js" target="_blank">用户在线状态维护</a></li>
     * </ul>
     */
    subscribeEvent(options: {
        /**
         * 事件类型，目前只有 1
         *
         * @note 开发者可自定义 value 值来实现自身业务需求。一个 value 对应一个事件状态，其中 1-9999 为云信预定义值，开发者不可使用。
         */
        type: number;
        /**
         * 订阅账户列表
         */
        accounts: string[];
        /**
         * 订阅关系有效期，以秒为单位
         */
        subscribeTime?: number;
        /**
         * 订阅后是否立即同步最新事件
         */
        sync?: boolean;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMSubscribeEventResult) => void;
    }): void;
    /**
     * 按账号取消订阅关系
     */
    unSubscribeEventsByAccounts(options: {
        /**
         * 事件类型，目前只有 1
         */
        type: number;
        accounts?: string[];
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMUnSubscribeEventsByAccountsResult) => void;
    }): void;
    /**
     * 取消指定事件的全部订阅关系
     */
    unSubscribeEventsByType(options: {
        /**
         * 事件类型，目前只有 1
         */
        type: number;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 按账号获取指定事件的订阅关系
     */
    querySubscribeEventsByAccounts(options: {
        /**
         * 事件类型，目前只有 1
         */
        type: number;
        accounts: string[];
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMSubscribeEventInfo[]) => void;
    }): void;
    /**
     * 获取指定事件的订阅关系
     */
    querySubscribeEventsByType(options: {
        /**
         * 事件类型，目前只有 1
         */
        type: number;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMSubscribeEventInfo[]) => void;
    }): void;
}
/**
 * 下推下来的事件定义
 */
export interface NIMPushEventInfo {
    /**
     * 事件类型，目前只有 1
     */
    type: string;
    /**
     * 事件状态，云信预留 "1"/"2"/"3" 来标识登陆，登出，断开链接。
     */
    value: string;
    /**
     * 此事件触发的时间戳
     */
    time: string;
    /**
     * 事件触发者
     */
    account: string;
    /**
     * 事件触发者的客户端类型
     */
    clientType: string;
    /**
     * 扩展字段，任意对象。
     */
    custom: NIMStrAnyObj;
    /**
     * 客户端生成的 id
     */
    idClient: string;
    /**
     * 服务器生成的 id
     */
    idServer: string;
}
/**
 * 自己订阅的事件服务定义。
 */
export interface NIMSubscribeEventInfo {
    /**
     * 事件类型，目前只有 1
     */
    type: string;
    /**
     * 订阅有效期，秒为单位
     */
    subscribeTime: string;
    /**
     * 被订阅人（也就是事件发布人）的 accid
     */
    to: string;
    /**
     * 订阅此事件的时间戳
     */
    time: string;
}
export interface NIMUnSubscribeEventsByAccountsResult {
    /**
     * 取消失败的账号列表
     */
    failedAccounts: string[];
}
export interface NIMSubscribeEventResult {
    /**
     * 订阅失败的账号列表
     */
    failedAccounts?: string[];
}
export interface NIMPublishEventResult {
    idClient: string;
    idServer: string;
    time: number;
}
