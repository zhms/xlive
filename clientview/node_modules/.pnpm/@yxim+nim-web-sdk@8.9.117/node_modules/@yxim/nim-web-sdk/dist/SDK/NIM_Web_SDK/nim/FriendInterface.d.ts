import { NIMCommonError, NIMStrAnyObj } from '../types';
/**
 * 好友相关 API
 */
export interface FriendInterface {
    /**
     * 如果开发者在初始化SDK的时候设置了syncFriends为false, 那么就收不到onfriends回调, 可以调用此接口来获取好友列表
     *
     * 注：由于 v8.9.0 之后好友数量上限变为 10000，远端协议不允许一口气下发 10000 个。想要一口气获取有两种手段：
     *
     * 1. 如果开发者使用数据库，那么此接口将会返回所有数据库中有效的，且 updateTime > options.updateTime 的好友记录
     *
     * 2. 如果开发者不使用数据库，那么使用此接口，传入时间戳，将会从服务器获取 updateTime > options.timetag 的 3000 条记录，分页逻辑请自行处理。
     */
    getFriends(options: {
        /**
         * 时间戳，默认 0。获取更新时间大于此时间戳的升序 3000 条好友。
         */
        updateTime?: number;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: NIMFriendProfile[]) => void;
    }): void;
    /**
     * 直接添加好友，无需对方同意。接收方会收到 type = 'addFriend' 的系统消息，此系统通知 `from` 字段为申请方账号，`to` 字段为接收方的账号
     *
     * <h4>系统消息关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsysmsg} 在线接收系统消息</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsgunread} 在线时系统消息未读数更新</li>
     * </ul>
     *
     * <h4>好友关系关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onfriends} 初始化阶段同步好友关系</li>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction} 多端登录设备接收到好友事件</li>
     * </ul>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/user/%E7%94%A8%E6%88%B7%E8%B5%84%E6%96%99%E4%B8%8E%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB.js" target="_blank">用户资料与好友关系</a></li>
     * </ul>
     */
    addFriend(options: {
        /**
         * 要直接加为好友的账号
         */
        account: string;
        /**
         * 附言, 推荐开发者传入 JSON 格式化字符串。
         */
        ps?: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 申请加为好友，需要对方同意。接收方会收到 type = ‘applyFriend' 的系统通知。接收方可以选择 passFriendApply，或者 rejectFriendApply
     *
     * - 如果被申请方{@link FriendInterface.passFriendApply}，则申请方收到 `passFriendApply` 系统通知
     * - 如果被申请方{@link FriendInterface.rejectFriendApply}，则申请方收到 `rejectFriendApply` 系统通知
     *
     * <h4>系统消息关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsysmsg} 在线接收系统消息</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsgunread} 在线时系统消息未读数更新</li>
     * </ul>
     *
     * <h4>好友关系关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onfriends} 初始化阶段同步好友关系</li>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction} 多端登录设备接收到好友事件</li>
     * </ul>
     */
    applyFriend(options: {
        account: string;
        /**
         * 附言, 推荐开发者传入 JSON 格式化字符串。
         */
        ps?: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 通过好友申请。调用该函数后：
     * 1. 调用者收到 onupdatesysmsg 回调函数
     * 2. 接收者收到 onsysmsg、onupdatesysmsgunread 函数。onsysmsg 消息类型为 'passFriendApply'
     *
     * <h4>系统消息关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsysmsg} 在线接收系统消息</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsgunread} 在线时系统消息未读数更新</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsg} 在线时系统消息状态更新</li>
     * </ul>
     *
     * <h4>好友关系关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onfriends} 初始化阶段同步好友关系</li>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction} 多端登录设备接收到好友事件</li>
     * </ul>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/user/%E7%94%A8%E6%88%B7%E8%B5%84%E6%96%99%E4%B8%8E%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB.js" target="_blank">用户资料与好友关系</a></li>
     * </ul>
     */
    passFriendApply(options: {
        idServer: string;
        account: string;
        ps?: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 拒绝好友申请。调用该函数后：
     * 1. 调用者收到 onupdatesysmsg 回调函数
     * 2. 接收者收到 onsysmsg、onupdatesysmsgunread 函数。onsysmsg 消息类型为 'rejectFriendApply'
     *
     * <h4>系统消息关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsysmsg} 在线接收系统消息</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsgunread} 在线时系统消息未读数更新</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsg} 在线时系统消息状态更新</li>
     * </ul>
     *
     * <h4>好友关系关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onfriends} 初始化阶段同步好友关系</li>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction} 多端登录设备接收到好友事件</li>
     * </ul>
     */
    rejectFriendApply(options: {
        idServer: string;
        account: string;
        ps: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 删除好友。接收方会收到 type = 'deleteFriend' 的系统消息。此系统通知的from字段的值为删除方的帐号, to字段的值为被删除方的账号。
     *
     * <h4>系统消息关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsysmsg} 在线接收系统消息</li>
     * <li>{@link NIMGetInstanceOptions.onupdatesysmsgunread} 在线时系统消息未读数更新</li>
     * </ul>
     *
     * <h4>好友关系关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onfriends} 初始化阶段同步好友关系</li>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction} 多端登录设备接收到好友事件</li>
     * </ul>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/user/%E7%94%A8%E6%88%B7%E8%B5%84%E6%96%99%E4%B8%8E%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB.js" target="_blank">用户资料与好友关系</a></li>
     * </ul>
     */
    deleteFriend(options: {
        account: string;
        /**
         * 是否要删除好友的备注
         */
        delAlias?: boolean;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 更新好友的备注和扩展字段。多端登录设备会收到 onsyncfriendaction 回调
     *
     * <h4>关联函数</h4>
     * <ul>
     * <li>{@link NIMGetInstanceOptions.onsyncfriendaction}</li>
     * </ul>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/user/%E7%94%A8%E6%88%B7%E8%B5%84%E6%96%99%E4%B8%8E%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB.js" target="_blank">用户资料与好友关系</a></li>
     * </ul>
     */
    updateFriend(options: {
        account: string;
        /**
         * 备注
         */
        alias?: string;
        /**
         * 扩展字段, 选填, 开发者也可以使用JSON格式的字符串来扩展此内容
         */
        custom?: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null) => void;
    }): void;
    /**
     * 是否为我的好友
     *
     * 注：该接口需要数据库支持，若没有开启本地数据库能力，done 回调里只会返回 false
     */
    isMyFriend(options: {
        account: string;
        done?: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: boolean) => void;
    }): void;
}
/**
 * 好友信息的定义
 */
export interface NIMFriendProfile {
    /**
     * 账号 account ID
     */
    account: string;
    /**
     * 更新时间
     */
    updateTime: number;
    /**
     * 创建时间
     */
    createTime: number;
    /**
     * 是否有效，默认 true。为 true 代表是双方是彼此的朋友
     */
    valid?: boolean;
    /**
     * 备注
     */
    alias?: string;
    /**
     * 扩展字段
     */
    custom?: string;
}
