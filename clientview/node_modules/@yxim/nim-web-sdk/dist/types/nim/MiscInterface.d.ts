import { NIMCommonError, NIMStrAnyObj } from '../types';
/**
 * 杂项 API
 */
export interface MiscInterface {
    /**
     * 获取服务器时间戳（毫秒）
     */
    getServerTime(options: {
        done: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: number) => void;
    }): void;
    /**
     * 获取反垃圾词库。开发者可以通过此接口获取反垃圾的词库。调用后，词库加载后会自动保存在内存中
     *
     * 详细用法请参考: <a href="https://doc.yunxin.163.com/messaging/docs/TYzMTkzMDE?platform=web#%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9C%AC%E5%9C%B0%E5%8F%8D%E5%9E%83%E5%9C%BE">反垃圾(内容审核)</a>
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/message/%E5%86%85%E5%AE%B9%E5%AE%A1%E6%A0%B8.js" target="_blank">内容审核</a></li>
     * </ul>
     */
    getClientAntispamLexicon(options: {
        done: (err: NIMCommonError | Error | NIMStrAnyObj | null, data: {
            clientAntispam: {
                /**
                 * 词库文件的md5
                 */
                md5: string;
                /**
                 * 词库文件的下载地址
                 */
                nosurl: string;
                /**
                 * 词库内容, 可以被解析为 JSON 对象
                 */
                thesaurus: string;
                /**
                 * 词库版本
                 */
                version: string;
            };
        }) => void;
    }): void;
    /**
     * 检查客户端反垃圾。客户端反垃圾具体用法请参考 <a href="https://doc.yunxin.163.com/messaging/docs/TYzMTkzMDE?platform=web#%E6%AD%A5%E9%AA%A41%EF%BC%9A%E8%8E%B7%E5%8F%96%E5%8F%8D%E5%9E%83%E5%9C%BE%E8%AF%8D%E5%BA%93">反垃圾(内容审核)</a>
     *
     * 注: 调用此接口前，需要调用过一次 getClientAntispamLexicon 来获取反垃圾词库. 否则会出现 404 没有反垃圾词库
     *
     * <h4>示例场景</h4>
     * <ul>
     * <li><a href="https://github.com/netease-im/im-code-example-web/blob/master/im1/message/%E5%86%85%E5%AE%B9%E5%AE%A1%E6%A0%B8.js" target="_blank">内容审核</a></li>
     * </ul>
     */
    filterClientAntispam(options: {
        /**
         * 待检查文本.
         */
        content: string;
    }): {
        /**
         * 请求的处理状态
         */
        code: number;
        /**
         * 待检查文本.
         */
        content: string;
        /**
         * 建议处理提示
         */
        errmsg: string;
        /**
         * 建议放行的文本
         */
        result: string;
        /**
         * 建议处理类型
         *
         * 0 放行.
         * 1 对特殊字符过了过滤后放行
         * 2 建议拒绝发送
         * 3 命中客户端反垃圾，交给服务器处理，在发送消息时带上 clientAntiSpam 字段来表示命中.
         */
        type: number;
    };
}
